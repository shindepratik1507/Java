Slip 20
Q1. Write a program to accept 3 numbers using command line argument. Sort and display the
numbers. 
:-
public class accept3num {
    public static void main(String[] args) {
        if (args.length != 3) {
            System.out.println("Usage: java SortNumbers <num1> <num2> <num3>");
            return;
        }

        try {
            int num1 = Integer.parseInt(args[0]);
            int num2 = Integer.parseInt(args[1]);
            int num3 = Integer.parseInt(args[2]);

            // Sort the numbers in ascending order
            int[] sortedNumbers = { num1, num2, num3 };
            java.util.Arrays.sort(sortedNumbers);

            System.out.println("Sorted Numbers: " + sortedNumbers[0] + ", " + sortedNumbers[1] + ", " + sortedNumbers[2]);
        } catch (NumberFormatException e) {
            System.out.println("Invalid input. Please enter valid integers.");
        }
    }
}








Q2. Create an employee class (id,name,deptname,salary). Define a default and parameterized
constructor. Use ‘this’ keyword to initialize instance variables. Keep a count of objects created. Create objects using parameterized constructor and display the object count after each object is
created. Also display the contents of each object. 
:-
public class Employee {
    private int id;
    private String name;
    private String deptName;
    private double salary;
    private static int objectCount = 0;

    public Employee() {
        objectCount++;
    }

    public Employee(int id, String name, String deptName, double salary) {
        this();  // Calls the default constructor to increment objectCount
        this.id = id;
        this.name = name;
        this.deptName = deptName;
        this.salary = salary;
        displayObjectDetails();
    }

    public void displayObjectDetails() {
        System.out.println("Employee ID: " + id);
        System.out.println("Employee Name: " + name);
        System.out.println("Department Name: " + deptName);
        System.out.println("Salary: $" + salary);
        System.out.println("Total Employee Objects Created: " + objectCount);
        System.out.println("---------------");
    }

    public static void main(String[] args) {
        Employee emp1 = new Employee(1, "John Doe", "HR", 50000);
        Employee emp2 = new Employee(2, "Alice Smith", "IT", 60000);
    }
}

                                                                 






OR





Q2. Write a JSP program to perform Arithmetic operations such as Multiplication and Divison. Design a HTML to accept two numbers in text box and radio buttons to display operations. On
submit display result as per the selected operation on next page using