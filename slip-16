Slip 16
Q1. Define a class MyNumber having one private integer data member. Write a parameterized
constructor to initialize to a value. Write isEven() to check given number is even or not. Use command
line argument to pass a value to the object.
:-
public class MyNumEven {
    private int value;

    public MyNumEven(int value) {
        this.value = value;
    }

    public boolean isEven() {
        return value % 2 == 0;
    }

    public static void main(String[] args) {
        if (args.length != 1) {
            System.out.println("Please provide exactly one integer as a command line argument.");
            return;
        }

        try {
            int inputValue = Integer.parseInt(args[0]);
            MyNumEven myNumber = new MyNumEven(inputValue);

            if (myNumber.isEven()) {
                System.out.println(inputValue + " is an even number.");
            } else {
                System.out.println(inputValue + " is not an even number.");
            }
        } catch (NumberFormatException e) {
            System.out.println("Invalid input. Please enter a valid integer.");
        }
    }
}







Q2. Write a program to create a super class Employee (members – name, salary). Derive a sub- class
Programmer (member – proglanguage). Create object of Programmer and display the details of it. 
:-
class SuperEmp {
    String name;
    double salary;

    public SuperEmp(String name, double salary) {
        this.name = name;
        this.salary = salary;
    }
}

class Programmer extends SuperEmp {
    String proglanguage;

    public Programmer(String name, double salary, String proglanguage) {
        super(name, salary);
        this.proglanguage = proglanguage;
    }

    public void displayDetails() {
        System.out.println("Name: " + name);
        System.out.println("Salary: " + salary);
        System.out.println("Programming Language: " + proglanguage);
    }
}

    class Main {
    public static void main(String[] args) {
        Programmer programmer = new Programmer("John Doe", 60000.0, "Java");
        programmer.displayDetails();
    }
}

                                                                 


OR






Q2. Write a JDBC program to update number_of_students of “BCA Science” to 1000. Create a
table Course (Code,name, department,number_of_students) in PostgreSQL database. Insertvalues
in the table