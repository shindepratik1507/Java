Slip 5
Q1. Write a program to accept a number from the user, if number is zero then throw user defined
exception ―Number is 0, otherwise display factorial of a number. 
:-
import java.util.Scanner;

// Custom exception class for a number being zero
class NumberIsZeroException extends Exception {
    public NumberIsZeroException() {
        super("Number is 0");
    }
}

public class FactorCalculator {
    // Function to calculate the factorial of a number
    public static long calculateFactorial(int num) {
        if (num == 0 || num == 1) {
            return 1;
        } else {
            return num * calculateFactorial(num - 1);
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        try {
            System.out.print("Enter a number: ");
            int num = scanner.nextInt();

            if (num == 0) {
                throw new NumberIsZeroException();
            } else {
                long factorial = calculateFactorial(num);
                System.out.println("Factorial of " + num + " is: " + factorial);
            }
        } catch (NumberIsZeroException e) {
            System.err.println("Error: " + e.getMessage());
        } catch (java.util.InputMismatchException e) {
            System.err.println("Invalid input. Please enter a valid number.");
        } finally {
            scanner.close();
        }
    }
}









Q2. Define a “Point” class having members – x,y (coordinates). Define default constructor and
parameterized constructors. Define subclass “ColorPoint” with member as color. Write display
method to display the details of Point
:-

class Point {
     int x;
     int y;

    // Default constructor
    public Point() {
        this.x = 0;
        this.y = 0;
    }

    // Parameterized constructor
    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public void display() {
        System.out.println("Point: (" + x + ", " + y + ")");
    }
}

class ColorPoint extends Point {
    private String color;

    // Parameterized constructor
    public ColorPoint(int x, int y, String color) {
        super(x, y);
        this.color = color;
    }

    @Override
    public void display() {
        System.out.println("ColorPoint: (" + super.x + ", " + super.y + "), Color: " + color);
    }
}

public class Main {
    public static void main(String[] args) {
        Point point1 = new Point();
        Point point2 = new Point(3, 4);
        ColorPoint colorPoint = new ColorPoint(1, 2, "Red");


        point1.display();
        point2.display();
        colorPoint.display();

    }
}